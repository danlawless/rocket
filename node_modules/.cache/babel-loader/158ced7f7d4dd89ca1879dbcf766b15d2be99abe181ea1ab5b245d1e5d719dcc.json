{"ast":null,"code":"var _jsxFileName = \"/Users/lawless/Documents/GitHub/rocket/rocket/src/components/ui/Badge.js\";\nimport React from 'react';\nimport './Badge.css';\n\n/**\n * MW Trading Badge Component\n * \n * Versatile badge component for confidence levels, status indicators, and metrics\n * Follows MW design system with confidence-based coloring\n * \n * Props:\n * - children: Badge content\n * - variant: 'confidence' | 'status' | 'metric' | 'outline' | 'solid'\n * - color: 'critical' | 'high' | 'medium' | 'low' | 'success' | 'warning' | 'danger' | 'info'\n * - size: 'xs' | 'sm' | 'md' | 'lg'\n * - confidence: number (0-100) - auto-determines color for confidence badges\n * - pulse: boolean - adds pulsing animation\n * - className: additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Badge = ({\n  children,\n  variant = 'solid',\n  color,\n  size = 'sm',\n  confidence,\n  pulse = false,\n  className = '',\n  ...props\n}) => {\n  // Auto-determine color based on confidence level\n  const getConfidenceColor = confidence => {\n    if (confidence >= 95) return 'critical';\n    if (confidence >= 85) return 'high';\n    if (confidence >= 70) return 'medium';\n    if (confidence >= 50) return 'low';\n    return 'very-low';\n  };\n\n  // Use confidence-based color if confidence is provided\n  const badgeColor = confidence !== undefined ? getConfidenceColor(confidence) : color || 'info';\n  const classes = ['mw-badge', `mw-badge-${variant}`, `mw-badge-${size}`, `mw-badge-${badgeColor}`, pulse ? 'mw-badge-pulse' : '', className].filter(Boolean).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes,\n    ...props,\n    children: [children, confidence !== undefined && variant === 'confidence' && '%']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n// Specialized badge components\n_c = Badge;\nexport const ConfidenceBadge = ({\n  confidence,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Badge, {\n  variant: \"confidence\",\n  confidence: confidence,\n  ...props,\n  children: confidence\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this);\n_c2 = ConfidenceBadge;\nexport const StatusBadge = ({\n  status,\n  ...props\n}) => {\n  const statusConfig = {\n    active: {\n      color: 'success',\n      children: 'ACTIVE',\n      pulse: true\n    },\n    approaching: {\n      color: 'warning',\n      children: 'APPROACH'\n    },\n    past_due: {\n      color: 'danger',\n      children: 'PAST DUE'\n    },\n    expired: {\n      color: 'low',\n      children: 'EXPIRED'\n    },\n    fresh: {\n      color: 'critical',\n      children: 'FRESH',\n      pulse: true\n    },\n    mw_call: {\n      color: 'critical',\n      children: 'MW CALL',\n      pulse: true\n    }\n  };\n  const config = statusConfig[status] || {\n    color: 'info',\n    children: status\n  };\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    variant: \"status\",\n    ...config,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n_c3 = StatusBadge;\nexport const MetricBadge = ({\n  label,\n  value,\n  color = 'info',\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"mw-metric-badge-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"mw-metric-label\",\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Badge, {\n    variant: \"metric\",\n    color: color,\n    ...props,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this);\n_c4 = MetricBadge;\nexport const TrendBadge = ({\n  change,\n  ...props\n}) => {\n  const isPositive = change > 0;\n  const color = isPositive ? 'success' : 'danger';\n  const symbol = isPositive ? '+' : '';\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    variant: \"solid\",\n    color: color,\n    ...props,\n    children: [symbol, change, \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c5 = TrendBadge;\nexport default Badge;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Badge\");\n$RefreshReg$(_c2, \"ConfidenceBadge\");\n$RefreshReg$(_c3, \"StatusBadge\");\n$RefreshReg$(_c4, \"MetricBadge\");\n$RefreshReg$(_c5, \"TrendBadge\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Badge","children","variant","color","size","confidence","pulse","className","props","getConfidenceColor","badgeColor","undefined","classes","filter","Boolean","join","fileName","_jsxFileName","lineNumber","columnNumber","_c","ConfidenceBadge","_c2","StatusBadge","status","statusConfig","active","approaching","past_due","expired","fresh","mw_call","config","_c3","MetricBadge","label","value","_c4","TrendBadge","change","isPositive","symbol","_c5","$RefreshReg$"],"sources":["/Users/lawless/Documents/GitHub/rocket/rocket/src/components/ui/Badge.js"],"sourcesContent":["import React from 'react';\nimport './Badge.css';\n\n/**\n * MW Trading Badge Component\n * \n * Versatile badge component for confidence levels, status indicators, and metrics\n * Follows MW design system with confidence-based coloring\n * \n * Props:\n * - children: Badge content\n * - variant: 'confidence' | 'status' | 'metric' | 'outline' | 'solid'\n * - color: 'critical' | 'high' | 'medium' | 'low' | 'success' | 'warning' | 'danger' | 'info'\n * - size: 'xs' | 'sm' | 'md' | 'lg'\n * - confidence: number (0-100) - auto-determines color for confidence badges\n * - pulse: boolean - adds pulsing animation\n * - className: additional CSS classes\n */\n\nconst Badge = ({\n  children,\n  variant = 'solid',\n  color,\n  size = 'sm',\n  confidence,\n  pulse = false,\n  className = '',\n  ...props\n}) => {\n  // Auto-determine color based on confidence level\n  const getConfidenceColor = (confidence) => {\n    if (confidence >= 95) return 'critical';\n    if (confidence >= 85) return 'high';\n    if (confidence >= 70) return 'medium';\n    if (confidence >= 50) return 'low';\n    return 'very-low';\n  };\n\n  // Use confidence-based color if confidence is provided\n  const badgeColor = confidence !== undefined ? getConfidenceColor(confidence) : color || 'info';\n\n  const classes = [\n    'mw-badge',\n    `mw-badge-${variant}`,\n    `mw-badge-${size}`,\n    `mw-badge-${badgeColor}`,\n    pulse ? 'mw-badge-pulse' : '',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <span className={classes} {...props}>\n      {children}\n      {confidence !== undefined && variant === 'confidence' && '%'}\n    </span>\n  );\n};\n\n// Specialized badge components\nexport const ConfidenceBadge = ({ confidence, ...props }) => (\n  <Badge variant=\"confidence\" confidence={confidence} {...props}>\n    {confidence}\n  </Badge>\n);\n\nexport const StatusBadge = ({ status, ...props }) => {\n  const statusConfig = {\n    active: { color: 'success', children: 'ACTIVE', pulse: true },\n    approaching: { color: 'warning', children: 'APPROACH' },\n    past_due: { color: 'danger', children: 'PAST DUE' },\n    expired: { color: 'low', children: 'EXPIRED' },\n    fresh: { color: 'critical', children: 'FRESH', pulse: true },\n    mw_call: { color: 'critical', children: 'MW CALL', pulse: true }\n  };\n\n  const config = statusConfig[status] || { color: 'info', children: status };\n  \n  return <Badge variant=\"status\" {...config} {...props} />;\n};\n\nexport const MetricBadge = ({ label, value, color = 'info', ...props }) => (\n  <div className=\"mw-metric-badge-container\">\n    <span className=\"mw-metric-label\">{label}</span>\n    <Badge variant=\"metric\" color={color} {...props}>\n      {value}\n    </Badge>\n  </div>\n);\n\nexport const TrendBadge = ({ change, ...props }) => {\n  const isPositive = change > 0;\n  const color = isPositive ? 'success' : 'danger';\n  const symbol = isPositive ? '+' : '';\n  \n  return (\n    <Badge variant=\"solid\" color={color} {...props}>\n      {symbol}{change}%\n    </Badge>\n  );\n};\n\nexport default Badge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}